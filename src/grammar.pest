WHITESPACE = _{ " " | NEWLINE }
COMMENT = _{ "#" ~ (!NEWLINE ~ ANY)* ~ NEWLINE }

delimiter = _{ "," }
source = _{ SOI ~ (statement ~ (delimiter ~ statement)*)? ~ &EOI }

spread = ${ "..." ~  identify }
statement = _{ spread | bind | body }
expression = _{ function | _if | comparison }
body = { expression }

function = { "(" ~ identify ~ ("," ~ identify)* ~ ")" ~ "=>" ~ body }

bind = { (identify | string_literal) ~ ":" ~ expression }

comparison = _{ additive ~ (equal | not_equal)* }
equal = { "=" ~  additive }
not_equal = { "!=" ~  additive }

additive = _{ multitive ~ (add | sub)* }
add = { "+" ~  multitive }
sub = { "-" ~  multitive }

multitive = _{ primary ~ (mul | div | surplus)* }
mul = { "*" ~ primary }
div = { "/" ~ primary }
surplus = { "%" ~ primary }

  
primary = { atom ~ calling* ~ (access ~ calling*)* }
access = { "." ~ identify }
calling = { "(" ~ expression ~ ("," ~ expression)* ~ ")" }

indexing = { "" }

hoge = _{ atom ~ ("." ~ atom)* }

atom = _{
  "(" ~ parenthesis ~ ")" | block | list | literal | null | identify
}

identify = ${ (ASCII_ALPHA | "_" | ASCII_DIGIT)+ }

null = { "null" }

parenthesis = _{ expression }

list = { "[" ~ (expression ~ (delimiter ~ expression)*)? ~ "]" }
block = { "{" ~ (statement ~ (delimiter ~ statement)*)? ~ "}" }
_if = { "if" ~ expression ~ expression ~ expression }
literal = _{ number | string_literal }

string_literal = ${ "\"" ~ string  ~ "\"" }
string = { (!"\"" ~ ("\\\"" | ANY | WHITESPACE))* }

number = ${ ASCII_DIGIT+ }
